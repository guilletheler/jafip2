package com.gt.ifepson.comandos.tiqueNc;

import com.gt.ifepson.comandos.CampoFiscal;
import com.gt.ifepson.comandos.TipoComando;
import com.gt.ifepson.comandos.ClasificacionComando;
import com.gt.ifepson.comandos.Extension;
import com.gt.ifepson.comandos.TipoDato;

public class TiqueNCUnitario extends TipoComando {

    public TiqueNCUnitario() {
    }

    @Override
    public String[] getNames() {
        return new String[]{"TiqueNCUnitario"};
    }

    @Override
    public String getDescripcion() {
        return "Realiza la emisión de un tique que posee un único ítem de venta y un solo pago, el cual es opcional. "
                + "La emisión de este comprobante se realiza de forma más rápida que su equivalente utilizando los comandos normales de tique.";
    }

    @Override
    public String getNotas() {
        return " La impresión de las líneas de descripción extra y de descripción será truncada de acuerdo al máximo\n"
                + "permitido por línea.";
    }

    @Override
    public String getRequerimientos() {
        return "No superar los máximos permitidos para las operaciones matemáticas.\n"
                + "Mecanismo impresor en línea y con papel";
    }

    @Override
    public int getCodigo() {
        return 0x0A30;
    }

    @Override
    public ClasificacionComando getClasificacionComando() {
        return ClasificacionComando.TIQUE;
    }

    @Override
    public int[] getComando() {
        int[] ret = new int[2];
        ret[0] = 0x0A;
        ret[1] = 0x30;
        return ret;
    }

    @Override
    public Extension[] getExtensiones() {
        return new Extension[]{
            new Extension(0b0000000000000001, "Respuesta",
            "NO_DEVUELVE_RESPUESTA", 0b0000000000000000,
            "DEVUELVE_RESPUESTA", 0b0000000000000001),
            new Extension(0b0100000000000000, "Imprimir",
            "IMPRIMIRT_TIQUE", 0b0000000000000000,
            "NO_IMPRIMIRT_TIQUE", 0b0100000000000000)
        };
    }

    @Override
    public CampoFiscal[] getCamposEntrada() {
        return new CampoFiscal[]{
            new CampoFiscal(1, "Descripción extra #1", TipoDato.RT, -1, true),
            new CampoFiscal(2, "Descripción extra #2", TipoDato.RT, -1, true),
            new CampoFiscal(3, "Descripción extra #3", TipoDato.RT, -1, true),
            new CampoFiscal(4, "Descripción extra #4", TipoDato.RT, -1, true),
            new CampoFiscal(5, "Descripción del item", TipoDato.RT, -1, false),
            new CampoFiscal(6, "Cantidad", TipoDato.N_5_4, 9, false),
            new CampoFiscal(7, "Precio Unitario", TipoDato.N_7_4, 11, false),
            new CampoFiscal(8, "Tasa de IVA", TipoDato.N_0_4, 4, false),
            new CampoFiscal(9, "Impuestos internos fijos", TipoDato.N_7_4, 11, true),
            new CampoFiscal(10, "Coeficiente de impuestos internos porcentuales", TipoDato.N_0_8, 8, true),
            new CampoFiscal(11, "Unidad de referencia MTX", TipoDato.N_E, 6, true),
            new CampoFiscal(12, "Codigo de ítem MTX", TipoDato.A, 13, true),
            new CampoFiscal(13, "Codigo interno", TipoDato.A, 50, true),
            new CampoFiscal(14, "Codigo de unidad de medida", TipoDato.N_E, 2, false),
            new CampoFiscal(15, "Codigo de condición frente al IVA", TipoDato.N_E, 1, true),
            new CampoFiscal(16, "Descripción extra #1", TipoDato.RT, -1, true),
            new CampoFiscal(17, "Descripción extra #2", TipoDato.RT, -1, true),
            new CampoFiscal(18, "Cantidad de cuotas", TipoDato.N_E, 3, true),
            new CampoFiscal(19, "Detalle de otra forma de pago", TipoDato.RT, -1, true),
            new CampoFiscal(20, "Detalle de los cupones", TipoDato.RT, -1, true),
            new CampoFiscal(21, "Código de forma de pago", TipoDato.N_E, 2, false),
            new CampoFiscal(22, "Monto de pago", TipoDato.N_10_2, 12, false),
            new CampoFiscal(23, "Número de línea de cola de reemplazo #1", TipoDato.N_E, 3, true),
            new CampoFiscal(24, "Descripción de reemplazo #1", TipoDato.RT, -1, true),
            new CampoFiscal(25, "Número de línea de cola de reemplazo #2", TipoDato.N_E, 3, true),
            new CampoFiscal(26, "Descripción de reemplazo #2", TipoDato.RT, -1, true),
            new CampoFiscal(27, "Número de línea de cola de reemplazo #3", TipoDato.N_E, 3, true),
            new CampoFiscal(28, "Descripción de reemplazo #3", TipoDato.RT, -1, true),
            new CampoFiscal(29, "Líneas reservadas para la firma", TipoDato.N_E, 1, true)
        };
    }

    @Override
    public CampoFiscal[] getCamposSalida() {
        return new CampoFiscal[]{
            new CampoFiscal(1, "Número de tique/tique nota de crédito", TipoDato.N_E, 8, false),
            new CampoFiscal(2, "Monto total", TipoDato.N_10_2, 12, false),
            new CampoFiscal(3, "Monto total de IVA del tique/tique nota de crédito", TipoDato.N_10_2, 12, false),
            new CampoFiscal(4, "Vuelto", TipoDato.N_10_2, 12, false)
        };
    }

}
