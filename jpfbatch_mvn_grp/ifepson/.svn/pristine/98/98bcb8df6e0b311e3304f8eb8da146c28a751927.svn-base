package com.gt.ifepson.comandos.notaCreditoAbcm;

import com.gt.ifepson.comandos.CampoFiscal;
import com.gt.ifepson.comandos.TipoComando;
import com.gt.ifepson.comandos.ClasificacionComando;
import com.gt.ifepson.comandos.Extension;
import com.gt.ifepson.comandos.TipoDato;

public class InformacionNotaCreditoABCM extends TipoComando {

    public InformacionNotaCreditoABCM() {
    }

    @Override
    public String[] getNames() {
        return new String[]{"InformacionTiqueNCABCM"};
    }

    @Override
    public String getDescripcion() {
        return "Obtiene información de IVA del tique-nota de crédito A/B/C/M en curso.";
    }

    @Override
    public String getNotas() {
        return "La fase en la que se encuentra el tique fiscal puede tener los siguientes valores:\n"
                + "‘0’ – Fase inicial. Tique abierto sin ítems facturados.\n"
                + "‘1’ – Fase de venta.\n"
                + "‘2’ – Fase de descuentos/ajustes.\n"
                + "‘3’ – Fase de otros tributos.\n"
                + "‘4’ – Fase de pagos.";
    }

    @Override
    public String getRequerimientos() {
        return "Documento Tique-Nota de Crédito abierto.";
    }
    
    @Override
    public int getCodigo() {
        return 0x0D0A;
    }

    @Override
    public ClasificacionComando getClasificacionComando() {
        return ClasificacionComando.TNC;
    }

    @Override
    public int[] getComando() {
        int[] ret = new int[2];
        ret[0] = 0x0D;
        ret[1] = 0x0A;
        return ret;
    }

    @Override
    public Extension[] getExtensiones() {
        return new Extension[]{};
    }

    @Override
    public CampoFiscal[] getCamposEntrada() {
        return new CampoFiscal[]{};
    }

    @Override
    public CampoFiscal[] getCamposSalida() {
        return new CampoFiscal[]{
            new CampoFiscal(1, "Número de tique-nota de crédito", TipoDato.N_E, 8, false),
            new CampoFiscal(2, "Tipo de tique-nota de crédito (A, B, C, M)", TipoDato.L, 1, false),
            new CampoFiscal(3, "Total bruto", TipoDato.N_10_2, 12, false),
            new CampoFiscal(4, "Total pagado", TipoDato.N_10_2, 12, false),
            new CampoFiscal(5, "Total IVA", TipoDato.N_10_2, 12, false),
            new CampoFiscal(6, "Total impuestos internos", TipoDato.N_10_2, 12, false),
            new CampoFiscal(7, "Total otros tributos", TipoDato.N_10_2, 12, false),
            new CampoFiscal(8, "Cantidad de ítems utilizada", TipoDato.N_E, 4, false),
            new CampoFiscal(9, "Cantidad máxima de ítems posibles de utilización", TipoDato.N_E, 4, false),
            new CampoFiscal(10, "Cantidad de descuentos/ajustes globales realizados", TipoDato.N_E, 2, false),
            new CampoFiscal(11, "Cantidad máxima de descuentos/ajustes globales a realizar", TipoDato.N_E, 2, false),
            new CampoFiscal(12, "Cantidad máxima de nuevas tasas de impuestos disponibles en la jornada fiscal en curso.", TipoDato.N_E, 2, false),
            new CampoFiscal(13, "Cantidad de tasas de impuestos utilizadas", TipoDato.N_E, 2, false),
            new CampoFiscal(14, "Cantidad de otros tributo emitidos", TipoDato.N_E, 2, false),
            new CampoFiscal(15, "Cantidad máxima de nuevos otros tributos disponibles en la jornada fiscal en curso.", TipoDato.N_E, 2, false),
            new CampoFiscal(16, "Cantidad de pagos efectuados", TipoDato.N_E, 2, false),
            new CampoFiscal(17, "Cantidad máxima de pagos a realizar", TipoDato.N_E, 2, false),
            new CampoFiscal(18, "Fase actual del tique-nota de crédito", TipoDato.N_E, 2, false),
            new CampoFiscal(19, "Total neto", TipoDato.N_10_2, 12, false)
        };
    }
}
