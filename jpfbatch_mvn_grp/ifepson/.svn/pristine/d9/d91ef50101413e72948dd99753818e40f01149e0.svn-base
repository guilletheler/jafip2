package com.gt.ifepson.comandos.tiqueNcAbcm;

import com.gt.ifepson.comandos.CampoFiscal;
import com.gt.ifepson.comandos.TipoComando;
import com.gt.ifepson.comandos.ClasificacionComando;
import com.gt.ifepson.comandos.Extension;
import com.gt.ifepson.comandos.TipoDato;

public class CerrarTiqueNCABCM extends TipoComando {

    public CerrarTiqueNCABCM() {
    }

    @Override
    public String[] getNames() {
        return new String[]{"CerrarTiqueNCABCM"};
    }

    @Override
    public String getDescripcion() {
        return "Cerrar";
    }

    @Override
    public String getNotas() {
        return "";
    }

    @Override
    public String getRequerimientos() {
        return " El total del tique-nota de crédito A/B/C/M debe ser igual o superior a cero.\n"
                + " Mecanismo impresor en línea y con papel ó poco papel disponible.";
    }

    @Override
    public int getCodigo() {
        return 0x0D06;
    }

    @Override
    public ClasificacionComando getClasificacionComando() {
        return ClasificacionComando.TNC;
    }

    @Override
    public int[] getComando() {
        int[] ret = new int[2];
        ret[0] = 0x0D;
        ret[1] = 0x06;
        return ret;
    }

    @Override
    public Extension[] getExtensiones() {
        return new Extension[]{
            new Extension(0b0000000000000001, "Cortar Papel",
            "NO_CORTAR_PAPEL", 0b0000000000000000,
            "CORTAR_PAPEL", 0b0000000000000001),
            new Extension(0b0000000100000000, "Cantidad de Unidades",
            "NO_IMPRIMIR_CANTIDAD_DE_UNIDADES", 0b0000000000000000,
            "IMPRIMIR_CANTIDAD_DE_UNIDADES", 0b0000000000000001)
        };
    }

    @Override
    public CampoFiscal[] getCamposEntrada() {
        return new CampoFiscal[]{
            new CampoFiscal(1, "Número de línea de cola de reemplazo #1", TipoDato.N_E, 3, true),
            new CampoFiscal(2, "Descripción del reemplado #1", TipoDato.RT, -1, true),
            new CampoFiscal(3, "Número de línea de cola de reemplazo #2", TipoDato.N_E, 3, true),
            new CampoFiscal(4, "Descripción del reemplado #2", TipoDato.RT, -1, true),
            new CampoFiscal(5, "Número de línea de cola de reemplazo #3", TipoDato.N_E, 3, true),
            new CampoFiscal(6, "Descripción del reemplado #3", TipoDato.RT, -1, true),
            new CampoFiscal(7, "Líneas reservadas para firma (Este parámetro es opcional y su rango esta entre 0 y 3. Por defecto se utilizará el máximo valor.)", TipoDato.N_E, 1, true)
        };

    }

    @Override
    public CampoFiscal[] getCamposSalida() {
        return new CampoFiscal[]{
            new CampoFiscal(1, "Número del tique-nota de crédito", TipoDato.N_E, 8, true),
            new CampoFiscal(2, "Tipo de tique-nota de crédito (A, B, C, M)", TipoDato.L, 1, true),
            new CampoFiscal(3, "Monto total del tique-nota de crédito", TipoDato.N_10_2, 12, true),
            new CampoFiscal(4, "Monto total de IVA tique-nota de crédito", TipoDato.N_10_2, 12, true),
            new CampoFiscal(5, "Vuelto Final", TipoDato.N_10_2, 12, true)
        };
    }

}
