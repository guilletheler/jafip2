package com.gt.ifepson.comandos.tiqueNc;

import com.gt.ifepson.comandos.CampoFiscal;
import com.gt.ifepson.comandos.TipoComando;
import com.gt.ifepson.comandos.ClasificacionComando;
import com.gt.ifepson.comandos.Extension;
import com.gt.ifepson.comandos.TipoDato;

public class OtrosTributosTiqueNC extends TipoComando {

    public OtrosTributosTiqueNC() {
    }

    @Override
    public String[] getNames() {
        return new String[]{"OtrosTributosTiqueNC"};
    }

    @Override
    public String getDescripcion() {
        return "Otros Tributos";
    }

    @Override
    public String getNotas() {
        return "La impresión de las líneas de los tributos se efectúa en el momento del cierre del Documento.";
    }

    @Override
    public String getRequerimientos() {
        return "No superar los máximos permitidos para las operaciones matemáticas.\n"
                + "No haber superado la máxima cantidad de tributos del documento.\n"
                + "Para una anulación, que puede ser parcial o total, el tributo debe haber sido aplicado con anterioridad y el monto a anular debe ser igual al aplicado anteriormente.";
    }

    @Override
    public int getCodigo() {
        return 0x0A20;
    }

    @Override
    public ClasificacionComando getClasificacionComando() {
        return ClasificacionComando.TIQUE;
    }

    @Override
    public int[] getComando() {
        int[] ret = new int[2];
        ret[0] = 0x0A;
        ret[1] = 0x20;
        return ret;
    }

    @Override
    public Extension[] getExtensiones() {
        return new Extension[]{
            new Extension(0b0000000000000001, "Agrega o Anula",
            "AGREGA", 0x0000000000000000,
            "ANULA", 0x0000000000000001),
            new Extension(0b0000000000011110, "Tipo",
            "IMPUESTO_NACIONAL", 0x0000000000000100,
            "IMPUESTO_PROVINCIAL", 0x0000000000000110,
            "IMPUESTO_MUNICIPAL", 0x0000000000001010,
            "IMPUESTOS_INTERNOS", 0x0000000000001100,
            "OTROS", 0x0000000000010010),
            new Extension(0b0000000000100000, "Subtotal",
            "DEVUELVE_SUBTOTAL_PARCIAL", 0x0000000000000000,
            "NO_DEVUELVE_SUBTOTAL_PARCIAL", 0b0000000000100000)
        };
    }

    @Override
    public CampoFiscal[] getCamposEntrada() {
        return new CampoFiscal[]{
            new CampoFiscal(1, "Descripción", TipoDato.RT, -1, false),
            new CampoFiscal(2, "Monto", TipoDato.N_10_2, 12, false),
            new CampoFiscal(3, "Tasa de IVVA asociada", TipoDato.N_0_4, 4, true)
        };
    }

    @Override
    public CampoFiscal[] getCamposSalida() {
        return new CampoFiscal[]{
            new CampoFiscal(1, "Subtotal parcial (bruto)", TipoDato.N_10_2, 12, true)
        };
    }

}
