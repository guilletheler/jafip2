package com.gt.ifepson.comandos.dnfh;

import com.gt.ifepson.comandos.CampoFiscal;
import com.gt.ifepson.comandos.TipoComando;
import com.gt.ifepson.comandos.ClasificacionComando;
import com.gt.ifepson.comandos.Extension;
import com.gt.ifepson.comandos.TipoDato;

public class ObtenerConfiguracionDePreferenciasDNHF extends TipoComando {

    public ObtenerConfiguracionDePreferenciasDNHF() {
    }

    @Override
    public String[] getNames() {
        return new String[]{"ObtenerConfiguracionDePreferenciasDNHF"};
    }

    @Override
    public String getDescripcion() {
        return "Obtiene los valores de configuración para la emisión de documentos no fiscales homologados que se\n"
                + "encuentran almacenados en la memoria de trabajo.";
    }

    @Override
    public int getCodigo() {
        return 0x1009;
    }

    @Override
    public ClasificacionComando getClasificacionComando() {
        return ClasificacionComando.DNFH;
    }

    @Override
    public int[] getComando() {
        int[] ret = new int[2];
        ret[0] = 0x10;
        ret[1] = 0x09;
        return ret;
    }

    @Override
    public String getNotas() {
        return "No posee notas";
    }

    @Override
    public String getRequerimientos() {
        return "No posee requerimientos";
    }

    @Override
    public Extension[] getExtensiones() {
        return new Extension[]{};
    }

    @Override
    public CampoFiscal[] getCamposEntrada() {
        return new CampoFiscal[]{};
    }

    @Override
    public CampoFiscal[] getCamposSalida() { //17 campos
        return new CampoFiscal[]{
            new CampoFiscal(1, "Imprime detalles de pagos", TipoDato.Y, 1, false),
            new CampoFiscal(3, "Imprime line feed entes de las colas", TipoDato.Y, 1, false),
            new CampoFiscal(8, "Imprime líneas de nombre de fantasía", TipoDato.Y, 1, false),
            new CampoFiscal(11, "Imprime líneas de logo de usuario", TipoDato.Y, 1, false),
            new CampoFiscal(13, "Imprime line feed luego y antes del TOTAL", TipoDato.Y, 1, false),
            new CampoFiscal(14, "Reservado", TipoDato.B, 0, false),
            new CampoFiscal(17, "Imprime QR", TipoDato.Y, 1, false),

        };
    }

}
